{"version":3,"sources":["../patch.js"],"names":["patch","difference","target","Error","path","actions","dfs","node","diff","filter","_path","map","p","action","modifier","forEach","REMOVE","parentNode","removeChild","REPLACE","newNode","WebDom","render","replaceChild","TEXT","textContent","PROPS","Object","keys","prop","forOwn","key","ob","_action","value","style","removeProperty","INSERT","removeAttribute","setAttribute","push","appendChild","includes","childNodes","childNode"],"mappings":"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","file":"patch.36aea501.map","sourceRoot":"../example","sourcesContent":["const patch = (difference = [], target) => {\n  if (!target) {\n    throw new Error('target is required')\n  }\n  let path = 0\n  const actions = []\n\n  const dfs = node => {\n    path++\n    const diff = difference.filter(([_path]) => path === _path).map(([p, action, modifier]) => [action, modifier])\n\n    diff.forEach(([action, modifier]) => {\n      if (action === REMOVE) {\n        node.parentNode.removeChild(node)\n      }\n\n      if (action === REPLACE) {\n        const newNode = WebDom.render(modifier)\n        node.parentNode.replaceChild(newNode, node)\n      }\n\n      if (action === TEXT) {\n        node.textContent = modifier\n      }\n\n      if (action === PROPS) {\n        Object.keys(modifier).forEach(prop => {\n          if (prop === 'style') {\n            forOwn(modifier[prop], (key, ob) => {\n              const [_action, value] = ob\n              if (_action === REMOVE) node.style.removeProperty(key)\n              if (_action === INSERT || _action === REPLACE) node.style[key] = value\n            })\n          } else {\n            const [_action, value] = modifier[prop]\n            if (_action === REMOVE) node.removeAttribute(prop)\n            if (_action === INSERT || _action === REPLACE) node.setAttribute(prop, value)\n          }\n        })\n      }\n\n      // 插入会影响后续的遍历，放入actions，遍历之后统一插入\n      if (action === INSERT) {\n        actions.push(() => node.appendChild(WebDom.render(modifier)))\n      }\n    })\n\n    // 插入，删除不用遍历子节点\n    if (diff[0] && [REPLACE, REMOVE].includes(diff[0][0])) {\n      return\n    }\n    node.childNodes.forEach(childNode => dfs(childNode))\n  }\n\n  dfs(target)\n  actions.forEach(action => action())\n}"]}